package ${bussiPackage}.${entityPackage}.webService.impl;

import org.jeecg.common.api.vo.Result;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebService;
import java.util.List;
import lombok.extern.slf4j.Slf4j;
import java.util.UUID;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import org.springframework.beans.BeanUtils;

import ${bussiPackage}.${entityPackage}.webService.${entityName}WebService;
import ${bussiPackage}.${entityPackage}.entity.${entityName};
import ${bussiPackage}.${entityPackage}.vo.${entityName}Page;
import ${bussiPackage}.${entityPackage}.service.I${entityName}Service;
<#list subTables as sub>
import ${bussiPackage}.${entityPackage}.entity.${sub.entityName};
import ${bussiPackage}.${entityPackage}.service.I${sub.entityName}Service;
</#list>

 /**
 * @Description: ${tableVo.ftlDescription}
 * @Author: jeecg-boot
 * @Date:   ${.now?string["yyyy-MM-dd"]}
 * @Version: V1.0
 */
 @WebService(serviceName = "${entityName?uncap_first}WebService", // 与接口中指定的name一致
         targetNamespace = "http://webService.${entityPackage}.${bussiPackage}", // 与接口中的命名空间一致,一般是接口的包名倒
         endpointInterface = "${bussiPackage}.${entityPackage}.webService.${entityName}WebService"// 接口地址
 )
 @Component
 @Slf4j
public class ${entityName}WebServiceImpl implements ${entityName}WebService{

    @Autowired
    private I${entityName}Service ${entityName?uncap_first}Service;

    @Override
    public Result<${entityName}> add(@WebParam(name="${entityName?uncap_first}") ${entityName}Page ${entityName?uncap_first}Page){
          log.info("${entityName}WebService is start!");
          Result<${entityName}> result = new Result<${entityName}>();
          try {
             	${entityName} ${entityName?uncap_first} = new ${entityName}();
             	BeanUtils.copyProperties(${entityName?uncap_first}Page, ${entityName?uncap_first});
              ${entityName?uncap_first}Service.saveMain(${entityName?uncap_first}, <#list subTables as sub>${entityName?uncap_first}Page.get${sub.entityName}List()<#if sub_has_next>,</#if></#list>);
              result.success("操作成功");
          }catch(Exception e){
              log.error(e.getMessage(),e);
              result.error500("操作失败");
          }
           return result;
    }
    @Override
    public Result<List<${entityName}>> addList(@WebParam(name="${entityName?uncap_first}") List<${entityName}Page> ${entityName?uncap_first}Page){
             log.info("${entityName}WebService is start!");
            Result<List<${entityName}>> result = new Result<List<${entityName}>>();
                		try {
                		for(${entityName}Page ${entityName?uncap_first}Page1: ${entityName?uncap_first}Page ){
                			${entityName} ${entityName?uncap_first} = new ${entityName}();
                			BeanUtils.copyProperties(${entityName?uncap_first}Page1, ${entityName?uncap_first});

                			${entityName?uncap_first}Service.saveMain(${entityName?uncap_first}, <#list subTables as sub>${entityName?uncap_first}Page1.get${sub.entityName}List()<#if sub_has_next>,</#if></#list>);
                			result.success("添加成功！");
                			}
                		} catch (Exception e) {
                			log.error(e.getMessage(),e);
                			result.error500("操作失败");
                		}
                		return result;
    }
    @Override
    public Result<${entityName}> edit(@WebParam(name="${entityName?uncap_first}") ${entityName}Page ${entityName?uncap_first}Page){
       log.info("${entityName}WebService is start!");
            	Result<${entityName}> result = new Result<${entityName}>();
            		${entityName} ${entityName?uncap_first} = new ${entityName}();
            		BeanUtils.copyProperties(${entityName?uncap_first}Page, ${entityName?uncap_first});
            		${entityName} ${entityName?uncap_first}Entity = ${entityName?uncap_first}Service.getById(${entityName?uncap_first}.getId());
            		if(${entityName?uncap_first}Entity==null) {
            			result.error500("未找到对应实体");
            		}else {
            			boolean ok = ${entityName?uncap_first}Service.updateById(${entityName?uncap_first});
            			${entityName?uncap_first}Service.updateMain(${entityName?uncap_first}, <#list subTables as sub>${entityName?uncap_first}Page.get${sub.entityName}List()<#if sub_has_next>,</#if></#list>);
            			result.success("修改成功!");
            		}

            		return result;
    }
    @Override
    public Result<List<${entityName}>> editList(@WebParam(name="${entityName?uncap_first}") List<${entityName}Page> ${entityName?uncap_first}Page){
         log.info("${entityName}WebService is start!");
         Result<List<${entityName}>> result = new Result<List<${entityName}>>();
         try {
          for(${entityName}Page ${entityName?uncap_first}Page1: ${entityName?uncap_first}Page ){
          	${entityName} ${entityName?uncap_first} = new ${entityName}();
          		BeanUtils.copyProperties(${entityName?uncap_first}Page1, ${entityName?uncap_first});
                ${entityName} ${entityName?uncap_first}Entity = ${entityName?uncap_first}Service.getById(${entityName?uncap_first}.getId());
                if(${entityName?uncap_first}Entity==null) {
                	result.error500("未找到对应实体");
                }else {
                	boolean ok = ${entityName?uncap_first}Service.updateById(${entityName?uncap_first});
                	${entityName?uncap_first}Service.updateMain(${entityName?uncap_first}, <#list subTables as sub>${entityName?uncap_first}Page1.get${sub.entityName}List()<#if sub_has_next>,</#if></#list>);
                	result.success("修改成功!");
                }
          	}
          } catch (Exception e) {
          	log.error(e.getMessage(),e);
          	result.error500("操作失败");
          }
          return result;
    }
    @Override
    public Result<${entityName}> delete(@WebParam(name="${entityName?uncap_first}") ${entityName}Page ${entityName?uncap_first}Page){
           log.info("${entityName}WebService is start!");
           Result<${entityName}> result = new Result<${entityName}>();
           try {
               ${entityName?uncap_first}Service.delMain(${entityName?uncap_first}Page.getId());
               result.success("删除成功!");
           }catch (Exception e) {
           	log.error("删除失败",e.getMessage());
           	result.error500("删除失败!");
           }
           return result;
    }
}
